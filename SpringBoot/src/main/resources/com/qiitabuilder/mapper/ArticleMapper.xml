<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiitabuilder.mapper.ArticleMapper">

    <resultMap id="articlesMap" type="com.qiitabuilder.domain.Article">
        <id column="articleId" property="articleId"/>
        <result column="title" property="title"/>
        <result column="createdAt" property="createdAt"/>
        <result column="updatedAt" property="updatedAt"/>
        <result column="stateFlag" property="stateFlag"/>
        <result column="feedCnt" property="feedbackCount"/>
        <result column="myCnt" property="registeredMyArticleCount"/>
        <result column="recommendCnt" property="qiitaRecommendPoint"/>
        <association property="postedUser" javaType="com.qiitabuilder.domain.User">
            <id column="userId" property="userId"/>
            <result column="displayName" property="displayName"/>
            <result column="photoUrl" property="photoUrl"/>
        </association>
        <collection property="tags" ofType="com.qiitabuilder.domain.Tag">
            <result column="tagId" property="tagId"/>
            <result column="tagName" property="tagName"/>
        </collection>
    </resultMap>
  
    <resultMap id="loadResult" type="com.qiitabuilder.domain.Article">
        <id property="articleId" column="art_article_id"/>
        <result property="title" column="art_title"/>
        <result property="createdAt" column="art_created_at"/>
        <result property="updatedAt" column="art_updated_at"/>
        <result property="content" column="art_content"/>
        <result property="stateFlag" column="art_state_flag"/>
        <result column="feed_cnt" property="feedbackCount"/>
        <result column="my_cnt" property="registeredMyArticleCount"/>
        <result column="recommend_cnt" property="qiitaRecommendPoint"/>
        <association property="postedUser" javaType="com.qiitabuilder.domain.User">
            <id column="art_use_user_id" property="userId"/>
            <result column="art_use_display_name" property="displayName"/>
            <result column="art_use_photo_url" property="photoUrl"/>
        </association>
        <collection property="feedbacks" ofType="com.qiitabuilder.domain.Feedback">
            <id column="fee_feedback_id" property="feedbackId"/>
            <result column="fee_article_id" property="articleId"/>
            <result column="fee_created_at" property="createdAt"/>
            <result column="fee_updated_at" property="updatedAt"/>
            <result column="fee_content" property="content"/>
            <association property="postedUser" javaType="com.qiitabuilder.domain.User">
                <id column="fee_use_user_id" property="userId"/>
                <result column="fee_use_display_name" property="displayName"/>
                <result column="fee_use_photo_url" property="photoUrl"/>
            </association>
        </collection>
        <collection property="tags" ofType="com.qiitabuilder.domain.Tag">
            <id column="tag_id" property="tagId"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>

    <resultMap id="rankingUserResultMap" type="com.qiitabuilder.domain.RankingUser">
        <association property="user" javaType="com.qiitabuilder.domain.User">
            <id column="userId" property="userId"/>
            <result property="userId" column="user_id"/>
            <result property="displayName" column="display_name"/>
            <result property="photoUrl" column="photo_url"/>
            <result property="feedbackCount" column="fb_count"/>
            <result property="postedArticleCount" column="post_art_count"/>
            <result property="qiitaRecommendedAllCount" column="qiita_rec_all_count"/>
        </association>
    </resultMap>

    <resultMap id="articleResultMap" type="com.qiitabuilder.domain.Article">
        <id property="articleId" column="article_id"/>
        <result property="title" column="title"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="qiitaRecommendPoint" column="rec_count"/>
        <result property="registeredMyArticleCount" column="my_count"/>
        <result property="feedbackCount" column="fb_count"/>
        <association property="postedUser" column="user_id" javaType="com.qiitabuilder.domain.User"
                     select="findUser"/>
        <collection property="tags" ofType="com.qiitabuilder.domain.Tag">
            <result property="tagId" column="tag_id"/>
            <result property="tagName" column="tag_name"/>
        </collection>
    </resultMap>

    <resultMap id="userResultMap" type="com.qiitabuilder.domain.User">
        <id property="userId" column="user_id"/>
        <result property="displayName" column="display_name"/>
        <result property="photoUrl" column="photo_url"/>
    </resultMap>

    <!-- ****** SELECT ****** -->
    <select id="searchArticles" resultMap="articlesMap">
        select
        art.article_id as articleId,
        art.title as title,
        art.created_at as createdAt,
        art.updated_at as updatedAt,
        art.state_flag as stateFlag,
        tags.tag_id as tagId,
        tags.tag_name as tagName,
        feed_cnt_table.feed_cnt as feedCnt,
        my_cnt_table.my_cnt as myCnt,
        recommend_cnt_table.recommend_cnt as recommendCnt,
        users.user_id as userId,
        users.display_name as displayName,
        users.photo_url as photoUrl
        from (select * from qiita_builder.articles limit #{search.pageSize} offset #{search.offset}) as art
        left outer join qiita_builder.articles_tags_relations as a_t_relation
        on art.article_id = a_t_relation.article_id
        left outer join qiita_builder.tags as tags on a_t_relation.tag_id = tags.tag_id
        left outer join (select article_id, count(feed.article_id) as feed_cnt
        from qiita_builder.feedbacks as feed
        group by feed.article_id) as feed_cnt_table
        on art.article_id = feed_cnt_table.article_id
        left outer join (select article_id, count(my.article_id) as my_cnt
        from qiita_builder.my_articles as my
        group by my.article_id) as my_cnt_table on art.article_id = my_cnt_table.article_id
        left outer join (select article_id, count(recommend.article_id) as recommend_cnt
        from qiita_builder.qiita_recommends as recommend
        group by recommend.article_id) as recommend_cnt_table
        on art.article_id = recommend_cnt_table.article_id
        left join qiita_builder.users on art.user_id = users.user_id
        <where>
            <if test="search.searchWord !=null">
                title like CONCAT('%', #{search.searchWord}, '%')
            </if>
            <if test="search.searchTag!=null">
                and tags.tag_id in
                <foreach item="tag" index="index" collection="search.searchTag" open="(" separator="," close=")">
                    #{tag}
                </foreach>
            </if>
            <if test="search.period!=null">
                <if test="search.period==0">
                    and created_at between NOW() - interval 7 day and NOW()
                </if>
                <if test="search.period==1">
                    and DATE_FORMAT(created_at, '%Y%m') = DATE_FORMAT(NOW(), '%Y%m')
                </if>
            </if>
        </where>
        order by ${search.sort}
    </select>

    <select id="getTotalPage" resultType="_int">
        select count(*)
        from qiita_builder.articles as art
        left outer join qiita_builder.articles_tags_relations as a_t_relation
        on art.article_id = a_t_relation.article_id
        left outer join qiita_builder.tags as tags on a_t_relation.tag_id = tags.tag_id
        left outer join (select article_id, count(feed.article_id) as feed_cnt
        from qiita_builder.feedbacks as feed
        group by feed.article_id) as feed_cnt_table
        on art.article_id = feed_cnt_table.article_id
        left outer join (select article_id, count(my.article_id) as my_cnt
        from qiita_builder.my_articles as my
        group by my.article_id) as my_cnt_table on art.article_id = my_cnt_table.article_id
        left outer join (select article_id, count(recommend.article_id) as recommend_cnt
        from qiita_builder.qiita_recommends as recommend
        group by recommend.article_id) as recommend_cnt_table
        on art.article_id = recommend_cnt_table.article_id
        left join qiita_builder.users on art.user_id = users.user_id
        <where>
            <if test="search.searchWord !=null">
                title like CONCAT('%', #{search.searchWord}, '%')
            </if>
            <if test="search.searchTag!=null">
                and tags.tag_id in
                <foreach item="tag" index="index" collection="search.searchTag" open="(" separator="," close=")">
                    #{tag}
                </foreach>
            </if>
            <if test="search.period!=null">
                <if test="search.period==0">
                    and created_at between NOW() - interval 7 day and NOW()
                </if>
                <if test="search.period==1">
                    and DATE_FORMAT(created_at, '%Y%m') = DATE_FORMAT(NOW(), '%Y%m')
                </if>
            </if>
        </where>
    </select>

    <select id="load" resultMap="loadResult">
        SELECT
        art.article_id as art_article_id,
        art.title as art_title,
        art.created_at as art_created_at,
        art.updated_at as art_updated_at,
        art.content as art_content,
        art.state_flag as art_state_flag,

        art_use.user_id as art_use_user_id,
        art_use.display_name as art_use_display_name,
        art_use.photo_url as art_use_photo_url,

        fee.feedback_id as fee_feedback_id,
        fee.article_id as fee_article_id,
        fee.created_at as fee_created_at,
        fee.updated_at as fee_updated_at,
        fee.content as fee_content,

        fee_use.user_id as fee_use_user_id,
        fee_use.display_name as fee_use_display_name,
        fee_use.photo_url as fee_use_photo_url,

        tags.tag_id as tag_id,
        tags.tag_name as tag_name,

        feed_cnt_table.feed_cnt,
        my_cnt_table.my_cnt,
        recommend_cnt_table.recommend_cnt

        FROM
        articles AS art

        LEFT JOIN
        users as art_use
        ON art.user_id = art_use.user_id

        LEFT OUTER JOIN
        feedbacks as fee
        ON art.article_id = fee.article_id

        LEFT JOIN
        users as fee_use
        ON fee.user_id = fee_use.user_id

        LEFT OUTER JOIN
        articles_tags_relations AS a_t_relation
        ON art.article_id = a_t_relation.article_id

        LEFT OUTER JOIN
        tags AS tags
        ON a_t_relation.tag_id = tags.tag_id

        LEFT OUTER JOIN
        (
        SELECT
        article_id,
        COUNT(feed.article_id) AS feed_cnt
        FROM
        qiita_builder.feedbacks AS feed
        GROUP BY
        feed.article_id
        ) AS feed_cnt_table
        ON art.article_id = feed_cnt_table.article_id

        LEFT OUTER JOIN
        (
        SELECT
        article_id,
        COUNT(my.article_id) AS my_cnt
        FROM
        qiita_builder.my_articles AS my
        GROUP BY
        my.article_id
        ) AS my_cnt_table
        ON art.article_id = my_cnt_table.article_id

        LEFT OUTER JOIN
        (
        SELECT
        article_id,
        COUNT(recommend.article_id) AS recommend_cnt
        FROM
        qiita_builder.qiita_recommends AS recommend
        GROUP BY
        recommend.article_id
        ) AS recommend_cnt_table
        ON art.article_id = recommend_cnt_table.article_id

        WHERE
        art.article_id = #{articleId}

        ORDER BY
        art.article_id
        ;
    </select>

    <select id="
                " resultMap="rankingUserResultMap">
        SELECT users.user_id,
               users.display_name,
               users.photo_url,
               (
                   SELECT count(*)
                   FROM articles AS art
                   WHERE art.user_id = art_count_rank.user_id
                     AND (art.state_flag = 1 OR art.state_flag = 2)
               )                  AS fb_count,
               art_count_rank.cnt AS post_art_count,
               (
                   SELECT count(*)
                   FROM qiita_recommends AS rec
                   WHERE rec.posted_user_id = art_count_rank.user_id
               )                  AS qiita_rec_all_count
        FROM (
                 SELECT user_id,
                        count(*) AS cnt
                 FROM articles
                 WHERE state_flag = 1
                    OR state_flag = 2
                 GROUP BY user_id
                 ORDER BY count(*) DESC
             ) AS art_count_rank
                 LEFT OUTER JOIN users
                                 ON art_count_rank.user_id = users.user_id;
    </select>

    <!--    <select id="getCountByUserId" resultType="Integer">-->
    <!--        SELECT count(*)-->
    <!--        FROM articles-->
    <!--        WHERE user_id = #{userId}-->
    <!--          AND (state_flag = 1 OR state_flag = 2);-->
    <!--    </select>-->

    <select id="findUser" resultMap="userResultMap">
        SELECT user_id,
               display_name,
               photo_url
        FROM users
        WHERE user_id = #{user_id}
    </select>

    <select id="findArticleById" resultMap="articleResultMap">
        SELECT art.article_id,
               art.user_id,
               art.created_at,
               art.updated_at,
               art.title,
               art.state_flag,
               (
                   SELECT count(*)
                   FROM feedbacks AS fb
                   WHERE fb.article_id = #{articleId}
               ) AS fb_count,
               (
                   SELECT count(*)
                   FROM qiita_recommends AS rec
                   WHERE rec.article_id = #{articleId}
               ) AS rec_count,
               (
                   SELECT count(*)
                   FROM my_articles AS my
                   WHERE my.article_id = #{articleId}
               ) AS my_count,
               tags.tag_id,
               tags.tag_name
        FROM articles AS art
                 LEFT OUTER JOIN articles_tags_relations AS rel
                                 ON art.article_id = rel.article_id
                 LEFT OUTER JOIN tags ON rel.tag_id = tags.tag_id
        WHERE art.article_id = #{articleId};
    </select>

    <select id="getArticleIdListByUserId" resultType="Integer">
        SELECT article_id
        FROM articles
        WHERE user_id = #{userId}
          AND (state_flag = 1 OR state_flag = 2)
        ORDER BY created_at DESC;
    </select>

    <!-- ****** INSERT ****** -->
    <insert id="insertArticle" useGeneratedKeys="true" keyProperty="articleId">
        INSERT INTO articles(
        user_id,
        created_at,
        title,
        content,
        qiita_article_id,
        state_flag)
        VALUES (
        #{postedUser.userId},
        NOW(),
        #{title},
        #{content},
        #{qiitaArticleId},
        #{stateFlag})

        <selectKey resultType="Integer" keyProperty="articleId" order="AFTER">
            select @@IDENTITY
        </selectKey>
    </insert>


    <!-- ****** UPDATE ****** -->
    <update id="updateArticle">
        UPDATE articles
        SET user_id = #{postedUser.userId},
        updated_at = NOW(),
        title = #{title},
        content = #{content},
        qiita_article_id = #{qiitaArticleId},
        state_flag = #{stateFlag}
        WHERE article_id = #{articleId}
    </update>

</mapper>

